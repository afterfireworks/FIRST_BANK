DECLARE
  @WORK_DATE DATETIME 			--畫面選取日
, @DEALER_NO VARCHAR(10)		--交易員
, @BOND_KIND VARCHAR(10)		--債券種類
, @TRD_WORKFOR VARCHAR(10)		--交易用途
, @TRD_PURPOSE VARCHAR(10)		--交易目的
, @BOND_NO VARCHAR(10)			--債券代號
, @CLS_CURY VARCHAR(10)			--結算幣別（下拉條件：1-原幣別、2-基準幣別【參數檔PARM_NO=’ CURRENCY_TYPE2’】）
, @ORGN_CURY VARCHAR(10)		--交易幣別（下拉條件：空白表全部、1-台幣、2-外幣【參數檔PARM_NO=’ CURRENCY_TYPE’】）
, @WHENISSUE_FLAG CHAR(1)		--0:不含新券 1:含新券 PS.不含新券表只顯示非發行前或發行前但工作日已過發行交割日
, @DEPT_NO_IN VARCHAR(10)		--部門別(使用於查詢-部位類別)
, @SYS_DATE DATETIME			--目前系統工作日
, @ALL_DEALER_NO VARCHAR(300)	--畫面上所有下拉的交易員代號

SET @WORK_DATE = N'2019/3/29'
SET @DEALER_NO = ''
SET @BOND_KIND = '1'
SET @TRD_WORKFOR ='2'
SET @TRD_PURPOSE =''
SET @BOND_NO =''
SET @CLS_CURY ='2'
SET @ORGN_CURY = ''
SET @WHENISSUE_FLAG = '0'
SET @DEPT_NO_IN = 'D006'
SET @SYS_DATE = N'2019/3/29'
SET @ALL_DEALER_NO = '0'
---------宣告變數---------
DECLARE @NOW_MONTH_BEGIN DATETIME
DECLARE @NOW_YEAR_BEGIN DATETIME
DECLARE @PRE_DATE DATETIME
DECLARE @LAST_MONTH_END DATETIME
DECLARE @LAST_YEAR_END DATETIME
--20150506 Add by King (EXCHG_RATE)
DECLARE @BONDCURRENCY_TYPE varchar(15)

---------變數設值---------
SET @NOW_MONTH_BEGIN = DATEADD(MM, DATEDIFF(MM, 0, @WORK_DATE), 0)	--當月第一天
SET @NOW_YEAR_BEGIN = DATEADD(YY, DATEDIFF(YY, 0, @WORK_DATE), 0)	--當年第一天
SET @PRE_DATE = dbo.GetWorkDate(@WORK_DATE, -1)						--前一工作日
SET @LAST_MONTH_END	= dbo.GetWorkDate(@NOW_MONTH_BEGIN, -1)			--上月最後一個工作日
SET @LAST_YEAR_END = dbo.GetWorkDate(@NOW_YEAR_BEGIN, -1)			--去年最後一個工作日
--20150506 Add by King (EXCHG_RATE)
EXEC @BONDCURRENCY_TYPE=dbo.GetBONDCURRENCY_TYPE @WORK_DATE

DECLARE @IPO_DAY INT
SELECT @IPO_DAY = ISNULL((SELECT PARM_NUM1 AS IPO_DAY FROM SYS_PARM_DTL WHERE PARM_NO = 'IPO_DAY' AND PARM_NO1 = '1'), 0)



	SELECT PARM_3.PARM_NO1 +'-'+ PARM_3.PARM_CVALUE1 AS CB_VALUE
	, (CASE WHEN DATA_TABLE.ORGN_CURY IS NULL AND DEALER_MAIN_NO.ORGN_CURY IS NULL THEN 'NTD-台幣'
		ELSE PARM_2.PARM_NO1 + '-' + PARM_2.PARM_CVALUE1 END) AS ORGN_CURY
	, PARM_1.PARM_NO1 + '-' + PARM_1.PARM_CVALUE1 AS TRD_WORKFOR

	, DEALER_MAIN_NO.DEALER_NO +'-'+ Vresak.resak002 AS DEALER_NO
	, PARM_4.PARM_NO1 + '-' + PARM_4.PARM_CVALUE1 AS TRD_PURPOSE

	, CASE WHEN DATA_TABLE.TRD_VAL >= 0 THEN '多方部位' ELSE '空方部位' END AS BS_TYPE

	, ISNULL(DATA_TABLE.BRRW_FLAG, '') AS BRRW_FLAG 
	, CASE WHEN DATA_TABLE.BOND_NO IS NULL THEN '' ELSE DATA_TABLE.BOND_NO END AS BOND_NO
	, CASE WHEN DATA_TABLE.BOND_NO IS NULL THEN '' ELSE DATA_TABLE.BOND_NO + '-' + BOND.BOND_CSNAME END AS BOND_CSNAME
	, (CASE WHEN ISNULL(DATA_TABLE.WHENISSUE_FLAG, '0') = '1' THEN '1' ELSE '0' END) AS WHENISSUE_FLAG
	, ISNULL(BOND.BOND_PAR_RATE, 0) AS BOND_PAR_RATE
	, ISNULL(BOND.BOND_DUE_DATE, '') AS BOND_DUE_DATE
	, ISNULL(DATA_TABLE.TRD_VAL, 0) AS TRD_VAL
	, ISNULL(DATA_TABLE.RATE,0) AS RATE
	, ISNULL(DATA_TABLE.MDURATION,0) AS MDURATION
	, ISNULL(DATA_TABLE.COST_AMT, 0) AS COST_AMT
	, ISNULL(FR_RPBEF.INT_AMT_DAY, 0) AS INT_AMT_DAY
	, ISNULL(DATA_TABLE.MKT_RATE, 0) AS MKT_RATE
	, ISNULL(DATA_TABLE.MKT_PRICE, 0) AS MKT_PRICE

	, ISNULL(DATA_TABLE.UNREALIZE_PL, 0) AS UNREALIZE_PL
	, ISNULL(DATA_TABLE.UNREALIZE_PL_EX, 0) AS UNREALIZE_PL_EX
	, ISNULL(DATA_TABLE.UNREALIZE_PL_EX_OPOS, 0) AS UNREALIZE_PL_EX_OPOS
	, ISNULL(DATA_TABLE.REALIZE_PL, 0) AS REALIZE_PL
	, ISNULL(DATA_TABLE.REALIZE_PL_EX, 0) AS REALIZE_PL_EX
	, ISNULL(DATA_TABLE.REALIZE_PL_EX_OPOS, 0) AS REALIZE_PL_EX_OPOS
	, CASE WHEN DATA_TABLE.MKT_PRICE IS NULL THEN '0' WHEN DATA_TABLE.MDURATION IS NULL THEN '0'
		ELSE ROUND(DATA_TABLE.MKT_PRICE * DATA_TABLE.MDURATION / 10000,0) END AS DV01

	, CASE WHEN DATE IS NULL  
		THEN '' + CONVERT(VARCHAR(10),@WORK_DATE,111) + ''
		ELSE CONVERT(VARCHAR(10),DATA_TABLE.DATE,111) END AS DATE
	, CASE WHEN FR_SUB_ACCT.SUB_ACCT_NO IS NULL THEN '01-個人'
		ELSE RTRIM(FR_SUB_ACCT.SUB_ACCT_NO)+'-'+RTRIM(FR_SUB_ACCT.SUB_ACCT_NAME) END SUB_ACCT_NO
	--20150506 Add by King (EXCHG_RATE)
	, (CASE WHEN @CLS_CURY  = '2' THEN dbo.GetNEW_EXCHG_RATE(	(CASE WHEN DATA_TABLE.ORGN_CURY IS NULL AND DEALER_MAIN_NO.ORGN_CURY IS NULL THEN 'NTD'
																				ELSE PARM_2.PARM_NO1 END),'NTD',CONVERT(VARCHAR(10),@WORK_DATE,111)  , @BONDCURRENCY_TYPE ) 
		ELSE 1 END) AS EXCHG_RATE

	FROM(
		SELECT DTL.*,
		/* 須判斷是否須含新券。不含新券，須判斷：標購日期 = 發行交割日的前幾個工作日；含新券，可不判斷：標購日期 = NULL */
		CASE WHEN @WHENISSUE_FLAG ='0'
			THEN ISNULL(dbo.GetWorkDate(BOND.ISSUE_DATE, CAST(@IPO_DAY AS VARCHAR)), '9999/12/31') 
			ELSE NULL END AS IPO_DATE
		FROM(	
			SELECT FR_DAILY_SUM.WORK_DATE AS DATE
			, FR_DAILY_SUM.TRD_WORKFOR
			, FR_DAILY_SUM.TRD_PURPOSE
			, FR_DAILY_SUM.HBOND_FLAG
			, FR_DAILY_SUM.ORGN_CURY
			, FR_DAILY_SUM.DEALER_NO
			, FR_DAILY_SUM.SUB_ACCT_NO
			, FR_DAILY_SUM.BOND_NO
			, FR_DAILY_SUM.WHENISSUE_FLAG
			, FR_DAILY_SUM.BRRW_FLAG
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.TRD_VAL_KEEP1 ELSE FR_DAILY_SUM.TRD_VAL_KEEP END) AS TRD_VAL
			, FR_DAILY_SUM.YIELD AS RATE			
			, A.MDURATION AS MDURATION --20220601 MDURATION改統一使用ACCOUNT的值 Joy
			
			-- 基幣 AND 非借券，就用TRD_AMT_KEEP1
			, (CASE WHEN  @CLS_CURY = '2' AND FR_DAILY_SUM.BRRW_FLAG = '0' THEN FR_DAILY_SUM.TRD_AMT_KEEP1
			
			-- 基幣 AND 借券，就用STTL_AMT_KEEP1
				WHEN  @CLS_CURY = '2' AND FR_DAILY_SUM.BRRW_FLAG = '1' THEN FR_DAILY_SUM.STTL_AMT_KEEP1
				
			-- 原幣 AND 非借券，就用TRD_AMT_KEEP
				WHEN @CLS_CURY = '1' AND FR_DAILY_SUM.BRRW_FLAG = '0' THEN FR_DAILY_SUM.TRD_AMT_KEEP
				
			-- 原幣 AND 借券，就用STTL_AMT_KEEP
				WHEN @CLS_CURY = '1' AND FR_DAILY_SUM.BRRW_FLAG = '1' THEN FR_DAILY_SUM.STTL_AMT_KEEP
				END)AS COST_AMT
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.UNREALIZE_PL1 + ISNULL(FIX_EXG.UN_FIXED_EXCHANGE_AMT, 0) ELSE FR_DAILY_SUM.UNREALIZE_PL END) AS UNREALIZE_PL
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.UNREALIZE_PL1 - FR_DAILY_SUM.UNREALIZE_PL1_EX + ISNULL(FIX_EXG.UN_FIXED_EXCHANGE_AMT, 0) ELSE 0 END) AS UNREALIZE_PL_EX		
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.UNREALIZE_PL1_EX ELSE 0 END) AS UNREALIZE_PL_EX_OPOS
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.REALIZE_PL1 + ISNULL(FIX_EXG.REA_FIXED_EXCHANGE_AMT, 0) ELSE FR_DAILY_SUM.REALIZE_PL END) AS REALIZE_PL
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.REALIZE_PL1 - FR_DAILY_SUM.REALIZE_PL1_EX + ISNULL(FIX_EXG.REA_FIXED_EXCHANGE_AMT, 0) ELSE 0 END) AS REALIZE_PL_EX
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.REALIZE_PL1_EX ELSE 0 END) AS REALIZE_PL_EX_OPOS
			, FR_DAILY_SUM.MKT_RATE
			--, FR_DAILY_SUM.MKT_PRICE
			--20150506 Add by King
			, (CASE WHEN @CLS_CURY = '2' THEN FR_DAILY_SUM.MKT_PRICE1 ELSE FR_DAILY_SUM.MKT_PRICE END) AS MKT_PRICE

			, ISNULL(FIX_EXG.UN_FIXED_EXCHANGE_AMT,0) AS UN_FIXED_EXCHANGE_AMT
			, ISNULL(FIX_EXG.REA_FIXED_EXCHANGE_AMT,0) AS REA_FIXED_EXCHANGE_AMT
			FROM FR_DAILY_SUM
			LEFT JOIN ACCOUNT A ON FR_DAILY_SUM.BOND_NO = A.BOND_NO AND FR_DAILY_SUM.WORK_DATE = A.WORK_DATE AND A.TRD_STTL_FLAG = '1' --20210601 Joy
			LEFT JOIN (
				-- 留倉資料(OPOS_KEEP_HIS) + 當日平倉(OPOS_KEEP)
				SELECT H.DEALER_NO, H.SUB_ACCT_NO, H.BOND_NO, H.TRD_WORKFOR, H.TRD_PURPOSE, H.BRRW_FLAG, H.HBOND_FLAG
				--, SUM(UN_FIXED.UN_FIXED_EXCHANGE_AMT) AS UN_FIXED_EXCHANGE_AMT
				, 0 AS UN_FIXED_EXCHANGE_AMT
				--, SUM(REA_FIXED.REA_FIXED_EXCHANGE_AMT) AS REA_FIXED_EXCHANGE_AMT
				, 0 AS REA_FIXED_EXCHANGE_AMT
				FROM (
					SELECT H.TRD_NO, H.SEQ, H.DEALER_NO, H.SUB_ACCT_NO, H.BOND_NO, H.TRD_WORKFOR, H.TRD_PURPOSE, K.BRRW_FLAG, K.HBOND_FLAG
					FROM OPOS_KEEP_HIS H
					LEFT JOIN OPOS_KEEP K ON H.TRD_NO = K.TRD_NO_ORGN AND H.SEQ = K.SEQ
					WHERE WORK_DATE = CONVERT(VARCHAR(10),@WORK_DATE,111)
					UNION ALL
					SELECT K.TRD_NO_ORGN AS TRD_NO, K.SEQ, K.DEALER_NO, K.SUB_ACCT_NO, K.BOND_NO, K.TRD_WORKFOR, K.TRD_PURPOSE, K.BRRW_FLAG, K.HBOND_FLAG
					FROM OPOS_KEEP K
					WHERE CLS_POSIT_DATE = CONVERT(VARCHAR(10),@WORK_DATE,111)
					AND KEEP_FLAG = '0' AND SEPA_FLAG = '0'
				) H
				LEFT JOIN (
					SELECT TRD_NO, SEQ
					, CASE WHEN STTL_FLAG = '0' THEN TRD_EXCHANGE_AMT ELSE 0 END AS UN_FIXED_EXCHANGE_AMT
					FROM FIXED_EXCHG_AMT
					WHERE WORK_DATE = CONVERT(VARCHAR(10),@WORK_DATE,111)
					AND [TYPE] = '2'
				) UN_FIXED ON H.TRD_NO = UN_FIXED.TRD_NO AND H.SEQ = UN_FIXED.SEQ
				LEFT JOIN (
					SELECT TRD_NO, SEQ
					, CASE WHEN STTL_FLAG = '1' THEN TRD_EXCHANGE_AMT ELSE 0 END AS REA_FIXED_EXCHANGE_AMT
					FROM FIXED_EXCHG_AMT
					WHERE WORK_DATE <= CONVERT(VARCHAR(10),@WORK_DATE,111)
					AND [TYPE] = '2'
					AND STTL_FLAG = '1'
				) REA_FIXED ON H.TRD_NO = REA_FIXED.TRD_NO AND H.SEQ = REA_FIXED.SEQ
				GROUP BY H.DEALER_NO, H.SUB_ACCT_NO, H.BOND_NO, H.TRD_WORKFOR, H.TRD_PURPOSE, H.BRRW_FLAG, H.HBOND_FLAG
			)FIX_EXG ON FIX_EXG.DEALER_NO = FR_DAILY_SUM.DEALER_NO AND FIX_EXG.SUB_ACCT_NO = FR_DAILY_SUM.SUB_ACCT_NO 
			AND FIX_EXG.BOND_NO = FR_DAILY_SUM.BOND_NO AND FIX_EXG.TRD_WORKFOR = FR_DAILY_SUM.TRD_WORKFOR AND FIX_EXG.TRD_PURPOSE = FR_DAILY_SUM.TRD_PURPOSE 
			AND FIX_EXG.BRRW_FLAG = FR_DAILY_SUM.BRRW_FLAG AND FIX_EXG.HBOND_FLAG = FR_DAILY_SUM.HBOND_FLAG 		
			WHERE FR_DAILY_SUM.WORK_DATE = CONVERT(VARCHAR(10),@WORK_DATE,111)
		) DTL
		LEFT JOIN BOND ON BOND.BOND_NO = DTL.BOND_NO
	) DATA_TABLE 
	LEFT JOIN BOND ON BOND.BOND_NO = DATA_TABLE.BOND_NO
	RIGHT JOIN (
		SELECT *, PARM.PARM_NO1 AS CB_VALUE
		FROM(
			SELECT DISTINCT OPOS_KEEP.DEALER_NO, (CASE WHEN OPOS_TRD.BOND_TYPE1 = 'CB' THEN 'CB' ELSE 'GB' END) AS BOND_TYPE1, OPOS_TRD.TRD_WORKFOR, OPOS_TRD.TRD_PURPOSE, OPOS_TRD.ORGN_CURY
			FROM OPOS_KEEP
			INNER JOIN OPOS_TRD ON OPOS_TRD.TRD_NO = OPOS_KEEP.TRD_NO_ORGN
			WHERE OPOS_KEEP.TRD_DATE >= LTRIM(STR(YEAR(@WORK_DATE)))+'/01/01'
			AND OPOS_KEEP.TRD_DATE <= CONVERT(VARCHAR(10),@WORK_DATE,111)
			UNION  
			SELECT DISTINCT OPOS_KEEP_HIS.DEALER_NO, (CASE WHEN OPOS_TRD.BOND_TYPE1 = 'CB' THEN 'CB' ELSE 'GB' END) AS BOND_TYPE1, OPOS_TRD.TRD_WORKFOR, OPOS_TRD.TRD_PURPOSE, OPOS_TRD.ORGN_CURY
			FROM OPOS_KEEP_HIS
			INNER JOIN OPOS_TRD ON OPOS_TRD.TRD_NO = OPOS_KEEP_HIS.TRD_NO
			WHERE OPOS_KEEP_HIS.WORK_DATE = CONVERT(VARCHAR(10),@WORK_DATE,111)
		) DEALER_TABLE
		LEFT JOIN (SELECT * FROM SYS_PARM_DTL WHERE PARM_NO= 'CB_VALUE1') AS PARM ON PARM.PARM_NO1 = (CASE WHEN DEALER_TABLE.BOND_TYPE1 = 'CB' THEN '2' ELSE '1' END)
	) DEALER_MAIN_NO 
		ON DEALER_MAIN_NO.DEALER_NO = DATA_TABLE.DEALER_NO  AND DEALER_MAIN_NO.BOND_TYPE1 = (CASE WHEN BOND.BOND_TYPE1 = 'CB' THEN 'CB' ELSE 'GB' END) AND DEALER_MAIN_NO.TRD_WORKFOR = DATA_TABLE.TRD_WORKFOR AND DEALER_MAIN_NO.TRD_PURPOSE = DATA_TABLE.TRD_PURPOSE AND DEALER_MAIN_NO.ORGN_CURY = DATA_TABLE.ORGN_CURY

	INNER JOIN Vresak ON Vresak.resak001 = DEALER_MAIN_NO.DEALER_NO
	LEFT JOIN FR_SUB_ACCT ON DATA_TABLE.SUB_ACCT_NO = FR_SUB_ACCT.SUB_ACCT_NO AND FR_SUB_ACCT.DEPT_NO = @DEPT_NO_IN
	LEFT JOIN (
		SELECT O.DEALER_NO, O.SUB_ACCT_NO, O.BOND_NO, O.TRD_WORKFOR, O.TRD_PURPOSE, O.BRRW_FLAG--, O.HBOND_FLAG
		, SUM((CASE WHEN @CLS_CURY = '2' THEN F.INT_AMT_DAY1 ELSE F.INT_AMT_DAY END))AS INT_AMT_DAY 
		FROM FR_RPBEF F
		LEFT JOIN OPOS_KEEP O ON O.TRD_NO_ORGN = F.TRD_NO AND O.SEQ = F.SEQ
		--鎖住只要當日交易單還留倉，區間內債息均抓取
		INNER JOIN (
			SELECT DISTINCT TRD_NO
			FROM OPOS_KEEP_HIS HIS
			WHERE HIS.WORK_DATE = CONVERT(VARCHAR(10),@WORK_DATE,111)
		) HIS ON HIS.TRD_NO = F.TRD_NO 
		WHERE F.WORK_DATE <= CONVERT(VARCHAR(10),@WORK_DATE,111)
		AND F.WORK_DATE >= LTRIM(STR(YEAR(@WORK_DATE)))+'/01/01'
		GROUP BY O.DEALER_NO, O.SUB_ACCT_NO, O.BOND_NO, O.TRD_WORKFOR, O.TRD_PURPOSE, O.BRRW_FLAG--, O.HBOND_FLAG
	) FR_RPBEF ON FR_RPBEF.DEALER_NO = DATA_TABLE.DEALER_NO
	AND FR_RPBEF.SUB_ACCT_NO = DATA_TABLE.SUB_ACCT_NO
	AND FR_RPBEF.BOND_NO = DATA_TABLE.BOND_NO
	AND FR_RPBEF.TRD_WORKFOR = DATA_TABLE.TRD_WORKFOR
	AND FR_RPBEF.TRD_PURPOSE = DATA_TABLE.TRD_PURPOSE
	AND FR_RPBEF.BRRW_FLAG = DATA_TABLE.BRRW_FLAG
	--AND FR_RPBEF.HBOND_FLAG = DATA_TABLE.HBOND_FLAG	

	LEFT JOIN (SELECT DISTINCT PARM_NO1, PARM_CVALUE1 FROM dbo.SYS_PARM_DTL WHERE SYS_TYPE = 'BOND' AND PARM_NO = 'TRADEATTR1') AS PARM_1 ON  PARM_1.PARM_NO1 = (CASE WHEN DATA_TABLE.TRD_WORKFOR IS NULL THEN DEALER_MAIN_NO.TRD_WORKFOR ELSE DATA_TABLE.TRD_WORKFOR END)
	LEFT JOIN (SELECT * FROM SYS_PARM_DTL WHERE PARM_NO='BONDCURRENCY') AS PARM_2 ON PARM_2.PARM_NO1 = (CASE WHEN DATA_TABLE.ORGN_CURY IS NULL THEN DEALER_MAIN_NO.ORGN_CURY ELSE DATA_TABLE.ORGN_CURY END)
	LEFT JOIN (SELECT * FROM SYS_PARM_DTL WHERE PARM_NO='CB_VALUE1') AS PARM_3 ON PARM_3.PARM_NO1 = (CASE WHEN BOND.BOND_TYPE1 IS NULL THEN DEALER_MAIN_NO.CB_VALUE WHEN BOND.BOND_TYPE1 = 'CB' AND BOND.BOND_TYPE2 ='CB' THEN '2'  ELSE '1' END)
	LEFT JOIN (SELECT * FROM SYS_PARM_DTL WHERE PARM_NO='TRADEATTR2') AS PARM_4 ON PARM_4.PARM_NO1 = DEALER_MAIN_NO.TRD_PURPOSE
	WHERE  '1' = '1'  --沒有任何意義,只是讓下面條件比較好串(不用再去判斷需不需要加上 WHERE)
	AND DEALER_MAIN_NO.DEALER_NO IN( @ALL_DEALER_NO,'52','53','57','58','589','571','06991','54','541','55','59','67','88','89')
	AND PARM_3.PARM_NO1 = @BOND_KIND
	AND PARM_1.PARM_NO1 = @TRD_WORKFOR
	AND (DATA_TABLE.IPO_DATE IS NULL OR DATA_TABLE.IPO_DATE <= CONVERT(VARCHAR(10),@SYS_DATE,111)) --是否含新券
	ORDER BY CB_VALUE
	, ORGN_CURY
	, DATE
	, DEALER_MAIN_NO.TRD_WORKFOR
	, DEALER_MAIN_NO.TRD_PURPOSE
	, DEALER_MAIN_NO.DEALER_NO
	, SUB_ACCT_NO
	, WHENISSUE_FLAG
	, BS_TYPE
	, DATA_TABLE.BOND_NO
	, DATA_TABLE.BRRW_FLAG


--NonCB
